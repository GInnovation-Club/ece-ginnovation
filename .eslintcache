[{"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\index.js":"1","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\App.js":"2","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\reportWebVitals.js":"3","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\PageComponets\\Home.js":"4","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\store.js":"5","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\PageComponets\\Login.js":"6","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\PageComponets\\ProfilePage.js":"7","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\Navigation.js":"8","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\PageComponets\\Signup.js":"9","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\ProfileProjectSwiper.js":"10","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\SectionComponents\\Home\\LandingPage.js":"11","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\ProfilePage\\SkillCard.js":"12","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\SectionComponents\\Home\\Moto.js":"13","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\SectionComponents\\Home\\Blogs.js":"14","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\SectionComponents\\Home\\Members.js":"15","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\SectionComponents\\Home\\Videos.js":"16","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\SectionComponents\\Home\\Projects.js":"17","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\VideoSwiper.js":"18","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\StudentsSwiper.js":"19","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\AnimationComponents\\BlogAnimation.js":"20","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\AnimationComponents\\GrowAnimation.js":"21","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\HomePage\\MotoCardFrame.js":"22","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\HomePage\\BlogCard.js":"23","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\ProfilePage\\ProjectCard.js":"24","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\ProfilePage\\EditButton.js":"25","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\ProfilePage\\HeaderEditForm.js":"26","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\ProfilePage\\BioEditModal.js":"27","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\ProfilePage\\AchievementEditModal.js":"28","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\ProfilePage\\SkillEditModal.js":"29","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\PageComponets\\Error.js":"30","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\AnimationComponents\\ErrorAnimation.js":"31"},{"size":478,"mtime":1609770129732,"results":"32","hashOfConfig":"33"},{"size":1123,"mtime":1610824341006,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"33"},{"size":742,"mtime":1609829379419,"results":"36","hashOfConfig":"33"},{"size":1393,"mtime":1610823540534,"results":"37","hashOfConfig":"33"},{"size":5664,"mtime":1610468571647,"results":"38","hashOfConfig":"33"},{"size":15935,"mtime":1610823492007,"results":"39","hashOfConfig":"33"},{"size":3297,"mtime":1610821948358,"results":"40","hashOfConfig":"33"},{"size":8298,"mtime":1610468652101,"results":"41","hashOfConfig":"33"},{"size":1344,"mtime":1610822060635,"results":"42","hashOfConfig":"33"},{"size":3287,"mtime":1610469752850,"results":"43","hashOfConfig":"33"},{"size":1883,"mtime":1610646023673,"results":"44","hashOfConfig":"33"},{"size":2227,"mtime":1610468079548,"results":"45","hashOfConfig":"33"},{"size":4883,"mtime":1610468056285,"results":"46","hashOfConfig":"33"},{"size":644,"mtime":1610468071843,"results":"47","hashOfConfig":"33"},{"size":374,"mtime":1608389621653,"results":"48","hashOfConfig":"33"},{"size":5447,"mtime":1609350246770,"results":"49","hashOfConfig":"33"},{"size":7107,"mtime":1610468184180,"results":"50","hashOfConfig":"33"},{"size":2096,"mtime":1610468187754,"results":"51","hashOfConfig":"33"},{"size":534,"mtime":1610437050260,"results":"52","hashOfConfig":"33"},{"size":527,"mtime":1610437072185,"results":"53","hashOfConfig":"33"},{"size":568,"mtime":1610468108468,"results":"54","hashOfConfig":"33"},{"size":1640,"mtime":1609828724434,"results":"55","hashOfConfig":"33"},{"size":456,"mtime":1610822185252,"results":"56","hashOfConfig":"33"},{"size":225,"mtime":1610545118815,"results":"57","hashOfConfig":"33"},{"size":4864,"mtime":1610566011010,"results":"58","hashOfConfig":"33"},{"size":1597,"mtime":1610603166668,"results":"59","hashOfConfig":"33"},{"size":3100,"mtime":1610821967647,"results":"60","hashOfConfig":"33"},{"size":3894,"mtime":1610821993008,"results":"61","hashOfConfig":"33"},{"size":572,"mtime":1610824928473,"results":"62","hashOfConfig":"33"},{"size":518,"mtime":1610823874320,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1lfuqif",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\index.js",[],["132","133"],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\App.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\reportWebVitals.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\PageComponets\\Home.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\store.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\PageComponets\\Login.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\PageComponets\\ProfilePage.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\Navigation.js",["134"],"import React, { useState } from 'react';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Avatar } from 'antd';\r\nimport { LoginOutlined } from '@ant-design/icons';\r\nimport logo from '../assets/logo.png';\r\nimport popAnimation from '../assets/Animations/alertPop.png';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n//redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { authFunction } from '../store';\r\nconst Navigation = () => {\r\n  const [popConfirm, setPopConfirm] = useState(false);\r\n  const auth = useSelector((state) => state.loginReducer.isAuth);\r\n  const userFullName = useSelector((state) => state.userNameReducer.userName);\r\n  const userName = userFullName.split(' ')[0];\r\n  const userIcon = userName.charAt(0);\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n  return (\r\n    <>\r\n      {popConfirm ? (\r\n        <div className='modal-container'>\r\n          <div className='pop-confirm logout'>\r\n            <img src={popAnimation} alt='logout' />\r\n            <p>we will miss you :(</p>\r\n            <h4>Are you sure to Logout ?</h4>\r\n            <div className='btn-container'>\r\n              <button\r\n                onClick={() => {\r\n                  dispatch(authFunction(false));\r\n                  localStorage.removeItem('token');\r\n                  history.push('/ece-ginnovation');\r\n                  setPopConfirm(false);\r\n                }}\r\n                className='yes'\r\n              >\r\n                Yes\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  setPopConfirm(false);\r\n                }}\r\n                className='no'\r\n              >\r\n                No\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <Navbar bg='light' expand='lg' sticky='top' className='navigation'>\r\n        <Navbar.Brand as={Link} to='/ece-ginnovation'>\r\n          <img src={logo} alt='logo' className='nav-logo' />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n        <Navbar.Collapse id='basic-navbar-nav'>\r\n          <Nav className='ml-auto'>\r\n            {auth && (\r\n              <Nav.Link as={Link} to='/ece-ginnovation/profile'>\r\n                <Avatar\r\n                  className='icon'\r\n                  style={{\r\n                    color: '#fff',\r\n                    background: 'linear-gradient(to right, #373b44, #4286f4)',\r\n                  }}\r\n                >\r\n                  {userIcon}\r\n                </Avatar>\r\n                {userName}\r\n              </Nav.Link>\r\n            )}\r\n\r\n            {/* {auth && (\r\n              <Nav.Link\r\n                as={Link}\r\n                onClick={() => {\r\n                  setPopConfirm(true);\r\n                }}\r\n              >\r\n                <LogoutOutlined className='icon' /> LogOut\r\n              </Nav.Link>\r\n            )} */}\r\n            {auth ? (\r\n              ''\r\n            ) : (\r\n              <Nav.Link as={Link} to='/ece-ginnovation/login'>\r\n                <LoginOutlined className='icon' /> LogIn/SignUp\r\n              </Nav.Link>\r\n            )}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\nexport default Navigation;\r\n","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\PageComponets\\Signup.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\ProfileProjectSwiper.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\SectionComponents\\Home\\LandingPage.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\ProfilePage\\SkillCard.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\SectionComponents\\Home\\Moto.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\SectionComponents\\Home\\Blogs.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\SectionComponents\\Home\\Members.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\SectionComponents\\Home\\Videos.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\SectionComponents\\Home\\Projects.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\VideoSwiper.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\StudentsSwiper.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\AnimationComponents\\BlogAnimation.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\AnimationComponents\\GrowAnimation.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\HomePage\\MotoCardFrame.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\HomePage\\BlogCard.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\ProfilePage\\ProjectCard.js",["135"],"import React from 'react';\r\n\r\nconst ProjectCard = () => {\r\n  return (\r\n    <div className='profile-project-cards'>\r\n      <iframe\r\n        width='350'\r\n        height='190'\r\n        src='https://www.youtube.com/embed/1JxImoxlq_Q'\r\n        frameBorder='0'\r\n        allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\r\n        allowFullscreen\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\nexport default ProjectCard;\r\n","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\ProfilePage\\EditButton.js",[],["136","137"],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\ProfilePage\\HeaderEditForm.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\ProfilePage\\BioEditModal.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\ProfilePage\\AchievementEditModal.js",["138"],"import React, { useState } from 'react';\r\nimport { Form, Input, Button, Space } from 'antd';\r\nimport {\r\n  EditOutlined,\r\n  CloseOutlined,\r\n  MinusCircleOutlined,\r\n  PlusOutlined,\r\n} from '@ant-design/icons';\r\nconst AchievementEditModal = (props) => {\r\n  const [data, setData] = useState(props.data.achievements);\r\n  const [form] = Form.useForm();\r\n  const onFinish = (values) => {\r\n    console.log(values.achievements);\r\n  };\r\n  return (\r\n    <div className='modal-container'>\r\n      <div className='edit-modal'>\r\n        <h4>\r\n          Edit Achievements <EditOutlined className='icon' />\r\n          <CloseOutlined className='close-btn' onClick={props.handleClose} />\r\n        </h4>\r\n\r\n        <div className='form-container'>\r\n          <Form\r\n            form={form}\r\n            initialValues={{ achievements: data }}\r\n            name='dynamic_form_nest_item'\r\n            onFinish={onFinish}\r\n            autoComplete='off'\r\n          >\r\n            <Form.List name='achievements'>\r\n              {(fields, { add, remove }) => (\r\n                <>\r\n                  {fields.map((field) => (\r\n                    <Space key={field.key} align='baseline'>\r\n                      <Form.Item noStyle>\r\n                        <Form.Item\r\n                          {...field}\r\n                          label='Achievement Title'\r\n                          name={[field.name, 'title']}\r\n                          fieldKey={[field.fieldKey, 'title']}\r\n                          rules={[{ message: 'Missing sight' }]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Form.Item>\r\n                      <Form.Item\r\n                        {...field}\r\n                        label='Certificate Link'\r\n                        name={[field.name, 'link']}\r\n                        fieldKey={[field.fieldKey, 'link']}\r\n                        rules={[{ message: 'Missing Link' }]}\r\n                      >\r\n                        <Input />\r\n                      </Form.Item>\r\n\r\n                      <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                    </Space>\r\n                  ))}\r\n\r\n                  <Form.Item>\r\n                    <Button\r\n                      type='dashed'\r\n                      onClick={() => add()}\r\n                      block\r\n                      icon={<PlusOutlined />}\r\n                    >\r\n                      Add New Achievement\r\n                    </Button>\r\n                  </Form.Item>\r\n                </>\r\n              )}\r\n            </Form.List>\r\n            <Form.Item className='btn-container'>\r\n              <Button\r\n                type='secondary'\r\n                className='mr-2'\r\n                onClick={props.handleClose}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button type='primary' htmlType='submit'>\r\n                Save Changes\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default AchievementEditModal;\r\n","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\UiComponents\\ProfilePage\\SkillEditModal.js",["139"],"import React, { useState } from 'react';\r\nimport { Form, Input, Button, Row, Col, Space, Rate } from 'antd';\r\nimport {\r\n  EditOutlined,\r\n  CloseOutlined,\r\n  MinusCircleOutlined,\r\n  PlusOutlined,\r\n} from '@ant-design/icons';\r\nconst SkillEditModal = (props) => {\r\n  const [data, setData] = useState(props.data.skills);\r\n  const [form] = Form.useForm();\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n  };\r\n  return (\r\n    <div className='modal-container'>\r\n      <div className='edit-modal skill-edit-modal'>\r\n        <h4>\r\n          Edit Skills <EditOutlined className='icon' />\r\n          <CloseOutlined className='close-btn' onClick={props.handleClose} />\r\n        </h4>\r\n\r\n        <div className='form-container'>\r\n          <Form\r\n            form={form}\r\n            initialValues={{ skills: data }}\r\n            name='dynamic_form_nest_item'\r\n            onFinish={onFinish}\r\n            autoComplete='off'\r\n          >\r\n            <Form.List name='skills'>\r\n              {(fields, { add, remove }) => (\r\n                <>\r\n                  <Row gutter={8}>\r\n                    {fields.map((field) => (\r\n                      <Col md={{ span: 12 }}>\r\n                        <Space key={field.key} align='baseline'>\r\n                          <Row>\r\n                            <Col md={{ span: 12 }}>\r\n                              <Form.Item noStyle>\r\n                                <Form.Item\r\n                                  {...field}\r\n                                  name={[field.name, 'title']}\r\n                                  fieldKey={[field.fieldKey, 'title']}\r\n                                >\r\n                                  <Input />\r\n                                </Form.Item>\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col md={{ span: 12 }}>\r\n                              <Form.Item\r\n                                {...field}\r\n                                name={[field.name, 'rating']}\r\n                                fieldKey={[field.fieldKey, 'rating']}\r\n                              >\r\n                                <Rate className='ml-3' />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                              <Form.Item\r\n                                {...field}\r\n                                name={[field.name, 'description']}\r\n                                fieldKey={[field.fieldKey, 'description']}\r\n                              >\r\n                                <Input.TextArea />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                          <MinusCircleOutlined\r\n                            onClick={() => remove(field.name)}\r\n                          />\r\n                        </Space>\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n\r\n                  <Form.Item>\r\n                    <Button\r\n                      type='dashed'\r\n                      onClick={() => add()}\r\n                      block\r\n                      icon={<PlusOutlined />}\r\n                    >\r\n                      Add New Achievement\r\n                    </Button>\r\n                  </Form.Item>\r\n                </>\r\n              )}\r\n            </Form.List>\r\n            <Form.Item className='btn-container'>\r\n              <Button\r\n                type='secondary'\r\n                className='mr-2'\r\n                onClick={props.handleClose}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button type='primary' htmlType='submit'>\r\n                Save Changes\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SkillEditModal;\r\n","D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\PageComponets\\Error.js",[],"D:\\WebDev\\Learning\\React\\React Projects\\Ginnovation\\ginnovation\\src\\AnimationComponents\\ErrorAnimation.js",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":2,"column":23,"nodeType":"146","messageId":"147","endLine":2,"endColumn":34},{"ruleId":"148","severity":1,"message":"149","line":6,"column":7,"nodeType":"150","endLine":13,"endColumn":8},{"ruleId":"140","replacedBy":"151"},{"ruleId":"142","replacedBy":"152"},{"ruleId":"144","severity":1,"message":"153","line":10,"column":16,"nodeType":"146","messageId":"147","endLine":10,"endColumn":23},{"ruleId":"144","severity":1,"message":"153","line":10,"column":16,"nodeType":"146","messageId":"147","endLine":10,"endColumn":23},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement",["154"],["155"],"'setData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]